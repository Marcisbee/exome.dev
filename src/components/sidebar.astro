---
import { nameToPermalink } from "../utils/permalink.ts";
import logoSvg from "../assets/logo.svg";

type LinkFromList = ReturnType<typeof nameToPermalink>;

const pathname = new URL(Astro.request.url).pathname;
const currentPath = pathname.slice(1);

const links: [LinkFromList, LinkFromList[]][] = [
	[
		nameToPermalink("Getting Started"),
		[nameToPermalink("Install exome"), nameToPermalink("Your first store")],
	],
	[
		nameToPermalink("Tutorials"),
		[
			nameToPermalink("Todo App"),
			nameToPermalink("Movie DB app"),
			nameToPermalink("Cookie Clicker Game"),
		],
	],
	[
		nameToPermalink("Basics"),
		[
			nameToPermalink("Stores"),
			nameToPermalink("Properties"),
			nameToPermalink("Actions"),
			nameToPermalink("Async Actions"),
			nameToPermalink("Effects"),
		],
	],
	[
		nameToPermalink("Integration"),
		[
			nameToPermalink("React"),
			nameToPermalink("Preact"),
			nameToPermalink("Vue"),
			nameToPermalink("Svelte"),
			nameToPermalink("Solid"),
			nameToPermalink("Lit"),
			nameToPermalink("Rxjs"),
			nameToPermalink("Angular"),
			nameToPermalink("No framework"),
		],
	],
	[
		nameToPermalink("Guides"),
		[
			nameToPermalink("Folder structure"),
			nameToPermalink("Nested stores"),
			nameToPermalink("Testing"),
		],
	],
	[
		nameToPermalink("API reference"),
		[
			nameToPermalink("exome"),
			nameToPermalink("exome/devtools"),
			nameToPermalink("exome/ghost"),
			nameToPermalink("exome/state"),
			nameToPermalink("exome/utils"),
			nameToPermalink("exome/react"),
			nameToPermalink("exome/preact"),
			nameToPermalink("exome/vue"),
			nameToPermalink("exome/lit"),
			nameToPermalink("exome/rxjs"),
			nameToPermalink("exome/svelte"),
			nameToPermalink("exome/solid"),
			nameToPermalink("exome/angular"),
		],
	],
	[nameToPermalink("Test"), []],
];
---

<style>
	.sidebar {
		position: fixed;
		height: 100vh;
		width: 14rem;
		padding-top: 3rem;
		display: flex;
		flex-direction: column;

		& nav {
			margin-top: 1.125rem;
			display: flex;
			flex-direction: column;
			row-gap: 1rem;
			overflow: auto;
			padding-bottom: 1rem;
			overscroll-behavior: contain;
		}
	}

	.h1 {
		display: block;
		margin: 0;
		padding: 0;
		list-style-type: none;
		font-size: 0.875rem;

		> li {
			margin-top: 0;
			margin-bottom: 0.25rem;
			font-weight: 500;
			font-size: 0.875rem;

			> a {
				color: #1f1f1f;
				color: inherit;
				text-decoration: none;

				&:hover {
					color: #000;
					text-decoration: underline;
				}

				&.active {
					color: #000;
					text-decoration: underline;
				}
			}
		}
	}

	.h2 {
		display: block;
		margin: 0;
		padding: 0;
		list-style-type: none;

		> li {
			margin-top: 0;
			margin-bottom: 0.25rem;

			> a {
				color: #777;
				text-decoration: none;

				&:hover {
					color: #555;
					text-decoration: underline;
				}

				&.active {
					color: #f6841c;
					text-decoration: underline;
				}
			}
		}
	}
</style>

<aside class="sidebar">
	<a href="/">
		<img id="logo" width="130" height="35" src={logoSvg.src} alt="Exome" />
	</a>

	<nav>
		{
			links.map(([h1, h2]) => (
				<ul class="h1">
					<li>
						<a
							class:list={{ active: currentPath === h1.url }}
							href={`/${h1.url}/`}
						>
							{h1.name}
						</a>
					</li>

					<ul class="h2">
						{h2.map(({ name, url }) => (
							<li>
								<a href={`/${h1.url}/#${url}`}>{name}</a>
							</li>
						))}
					</ul>
				</ul>
			))
		}

		<section>
			<li>
				<a href="https://github.com/marcisbee/exome">GitHub</a>
			</li>

			<li>
				<a href="https://twitter.com/marcisbee">Twitter</a>
			</li>
		</section>
	</nav>
</aside>
